USE [master]
GO
CREATE DATABASE [EvParcial2]
 CONTAINMENT = NONE
 ON  PRIMARY 
( NAME = N'EvParcial2', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL16.SQLEXPRESS\MSSQL\DATA\EvParcial2.mdf' , SIZE = 8192KB , MAXSIZE = UNLIMITED, FILEGROWTH = 65536KB )
 LOG ON 
( NAME = N'EvParcial2_log', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL16.SQLEXPRESS\MSSQL\DATA\EvParcial2_log.ldf' , SIZE = 8192KB , MAXSIZE = 2048GB , FILEGROWTH = 65536KB )
 WITH CATALOG_COLLATION = DATABASE_DEFAULT, LEDGER = OFF
GO
ALTER DATABASE [EvParcial2] SET COMPATIBILITY_LEVEL = 160
GO
IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
begin
EXEC [EvParcial2].[dbo].[sp_fulltext_database] @action = 'enable'
end
GO
ALTER DATABASE [EvParcial2] SET ANSI_NULL_DEFAULT OFF 
GO
ALTER DATABASE [EvParcial2] SET ANSI_NULLS OFF 
GO
ALTER DATABASE [EvParcial2] SET ANSI_PADDING OFF 
GO
ALTER DATABASE [EvParcial2] SET ANSI_WARNINGS OFF 
GO
ALTER DATABASE [EvParcial2] SET ARITHABORT OFF 
GO
ALTER DATABASE [EvParcial2] SET AUTO_CLOSE ON 
GO
ALTER DATABASE [EvParcial2] SET AUTO_SHRINK OFF 
GO
ALTER DATABASE [EvParcial2] SET AUTO_UPDATE_STATISTICS ON 
GO
ALTER DATABASE [EvParcial2] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO
ALTER DATABASE [EvParcial2] SET CURSOR_DEFAULT  GLOBAL 
GO
ALTER DATABASE [EvParcial2] SET CONCAT_NULL_YIELDS_NULL OFF 
GO
ALTER DATABASE [EvParcial2] SET NUMERIC_ROUNDABORT OFF 
GO
ALTER DATABASE [EvParcial2] SET QUOTED_IDENTIFIER OFF 
GO
ALTER DATABASE [EvParcial2] SET RECURSIVE_TRIGGERS OFF 
GO
ALTER DATABASE [EvParcial2] SET  ENABLE_BROKER 
GO
ALTER DATABASE [EvParcial2] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
GO
ALTER DATABASE [EvParcial2] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO
ALTER DATABASE [EvParcial2] SET TRUSTWORTHY OFF 
GO
ALTER DATABASE [EvParcial2] SET ALLOW_SNAPSHOT_ISOLATION OFF 
GO
ALTER DATABASE [EvParcial2] SET PARAMETERIZATION SIMPLE 
GO
ALTER DATABASE [EvParcial2] SET READ_COMMITTED_SNAPSHOT OFF 
GO
ALTER DATABASE [EvParcial2] SET HONOR_BROKER_PRIORITY OFF 
GO
ALTER DATABASE [EvParcial2] SET RECOVERY SIMPLE 
GO
ALTER DATABASE [EvParcial2] SET  MULTI_USER 
GO
ALTER DATABASE [EvParcial2] SET PAGE_VERIFY CHECKSUM  
GO
ALTER DATABASE [EvParcial2] SET DB_CHAINING OFF 
GO
ALTER DATABASE [EvParcial2] SET FILESTREAM( NON_TRANSACTED_ACCESS = OFF ) 
GO
ALTER DATABASE [EvParcial2] SET TARGET_RECOVERY_TIME = 60 SECONDS 
GO
ALTER DATABASE [EvParcial2] SET DELAYED_DURABILITY = DISABLED 
GO
ALTER DATABASE [EvParcial2] SET ACCELERATED_DATABASE_RECOVERY = OFF  
GO
ALTER DATABASE [EvParcial2] SET QUERY_STORE = ON
GO
ALTER DATABASE [EvParcial2] SET QUERY_STORE (OPERATION_MODE = READ_WRITE, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 30), DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_STORAGE_SIZE_MB = 1000, QUERY_CAPTURE_MODE = AUTO, SIZE_BASED_CLEANUP_MODE = AUTO, MAX_PLANS_PER_QUERY = 200, WAIT_STATS_CAPTURE_MODE = ON)
GO
USE [EvParcial2]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Libros](
	[IdLibro] [int] IDENTITY(1,1) NOT NULL,
	[Titulo] [varchar](255) NOT NULL,
	[Autor] [varchar](255) NOT NULL,
	[Editorial] [varchar](255) NULL,
	[Precio] [decimal](10, 2) NOT NULL,
	[Stock] [int] NOT NULL,
	[IdProveedor] [int] NULL,
PRIMARY KEY CLUSTERED 
(
	[IdLibro] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Ventas](
	[IdVenta] [int] IDENTITY(1,1) NOT NULL,
	[IdLibro] [int] NOT NULL,
	[Cantidad] [int] NOT NULL,
	[Total] [decimal](10, 2) NULL,
	[FechaVenta] [datetime] NOT NULL,
 CONSTRAINT [PK__Ventas__BC1240BD33CBAF62] PRIMARY KEY CLUSTERED 
(
	[IdVenta] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vw_VentasConNombreLibro] AS
SELECT 
    V.IdVenta,
    L.Titulo AS NombreLibro,
    V.Cantidad,
    V.Total,
    V.FechaVenta
FROM dbo.Ventas V
INNER JOIN dbo.Libros L ON V.IdLibro = L.IdLibro;
GO
/****** Object:  Table [dbo].[Proveedores]    Script Date: 2/1/2025 4:11:37 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Proveedores](
	[IdProveedor] [int] IDENTITY(1,1) NOT NULL,
	[Nombre] [varchar](100) NOT NULL,
	[Contacto] [varchar](100) NULL,
	[Telefono] [varchar](20) NULL,
	[Direccion] [text] NULL,
PRIMARY KEY CLUSTERED 
(
	[IdProveedor] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
ALTER TABLE [dbo].[Libros] ADD  DEFAULT ((0)) FOR [Stock]
GO
ALTER TABLE [dbo].[Ventas] ADD  CONSTRAINT [DF_Ventas_FechaVenta]  DEFAULT (getdate()) FOR [FechaVenta]
GO
ALTER TABLE [dbo].[Libros]  WITH CHECK ADD FOREIGN KEY([IdProveedor])
REFERENCES [dbo].[Proveedores] ([IdProveedor])
ON DELETE SET NULL
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[librosPorMes] 
    @Mes NVARCHAR(20) 
AS
BEGIN
    SET NOCOUNT ON;

    DECLARE @NumeroMes INT;
    
    SET @NumeroMes = 
        CASE LOWER(@Mes)
            WHEN 'enero' THEN 1
            WHEN 'febrero' THEN 2
            WHEN 'marzo' THEN 3
            WHEN 'abril' THEN 4
            WHEN 'mayo' THEN 5
            WHEN 'junio' THEN 6
            WHEN 'julio' THEN 7
            WHEN 'agosto' THEN 8
            WHEN 'septiembre' THEN 9
            WHEN 'octubre' THEN 10
            WHEN 'noviembre' THEN 11
            WHEN 'diciembre' THEN 12
            ELSE NULL
        END;

    -- Si el mes ingresado no es válido, se detiene la ejecución
    IF @NumeroMes IS NULL
    BEGIN
        PRINT 'Mes inválido. Debe ser un nombre de mes en español.';
        RETURN;
    END

    -- Consultar los libros vendidos en el mes dado (año fijo en 2025)
    SELECT 
        L.Titulo AS Libro,
        L.Autor AS Autor,
        SUM(V.Cantidad) AS Total_Vendidos,
        SUM(V.Total) AS Total_Ingresos
    FROM Ventas V
    INNER JOIN Libros L ON V.IdLibro = L.IdLibro
    WHERE YEAR(V.FechaVenta) = 2025 AND MONTH(V.FechaVenta) = @NumeroMes
    GROUP BY L.IdLibro, L.Titulo, L.Autor
    ORDER BY Total_Vendidos DESC;
END;
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_ReporteLibrosVendidos] 
    @Anio INT,
    @Mes INT
AS
BEGIN
    SET NOCOUNT ON;

    SELECT 
        L.Titulo AS Libro,
        L.Autor AS Autor,
        SUM(V.Cantidad) AS Total_Vendidos,
        SUM(V.Total) AS Total_Ingresos
    FROM Ventas V
    INNER JOIN Libros L ON V.IdLibro = L.IdLibro
    WHERE YEAR(V.FechaVenta) = @Anio AND MONTH(V.FechaVenta) = @Mes
    GROUP BY L.IdLibro, L.Titulo, L.Autor
    ORDER BY Total_Vendidos DESC;
END;
GO
USE [master]
GO
ALTER DATABASE [EvParcial2] SET  READ_WRITE 
GO
